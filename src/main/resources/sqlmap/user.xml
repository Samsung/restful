<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="user">

    <typeAlias alias="user" type="com.samsung.ax.restful.pojo.User"/>
    <typeAlias alias="query" type="com.samsung.ax.restful.pojo.Query"/>

    <resultMap id="userResult" class="user" extends="audit.auditResult">
        <result property="idx" column="idx" javaType="int" jdbcType="INT"/>
        <result property="name" column="name" javaType="String" jdbcType="VARCHAR"/>
        <result property="sid" column="sid" javaType="String" jdbcType="VARCHAR"/>
        <result property="username" column="username" javaType="String" jdbcType="VARCHAR"/>
        <result property="role" column="role" javaType="com.samsung.ax.restful.pojo.Role" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="signup" parameterClass="user">
        INSERT INTO
            user (name, pwd, sid, username, role)
        VALUES (
            LOWER(#name#), PASSWORD(#pwd#), #sid#, #username#, #role,javaType=com.samsung.ax.restful.pojo.Role,jdbcType=VARCHAR#
        )
        <selectKey resultClass="int" keyProperty="idx">
            SELECT LAST_INSERT_ID() AS idx
        </selectKey> 
    </insert>

    <update id="sid" parameterClass="user">
        UPDATE
            user
        SET
            sid = #sid# 
        WHERE
            idx = #idx# AND status = 1
    </update>
    
    <select id="signin" parameterClass="user" resultMap="userResult">
        SELECT
            idx, name, sid, username, role, createdate, updatedate
        FROM
            user
        WHERE
            name = LOWER(#name#) AND pwd = password(#pwd#) AND status = 1
    </select>
        
    <update id="update" parameterClass="user">
        UPDATE
            user
        SET
            username = #username#
            <dynamic>
                <isNotEmpty prepend="," property="pwd">
                    pwd = PASSWORD(#pwd#)
                </isNotEmpty>
            </dynamic>
        WHERE
            name = LOWER(#name#) AND status = 1
    </update>

    <delete id="delete" parameterClass="user">
        DELETE FROM 
            user
        WHERE 
            name = LOWER(#name#) AND status = 1
    </delete>

    <select id="name" parameterClass="String" resultMap="userResult">
        SELECT
            idx, name, sid, username, role, createdate, updatedate
        FROM
            user
        WHERE
            name = LOWER(#name#) AND status = 1
    </select>
            
    <select id="count" parameterClass="query" resultClass="int">
        SELECT
            COUNT(idx)
        FROM
            user
        WHERE
            status = 1
            <dynamic>
                <isNotNull prepend="AND" property="search">
                    name LIKE CONCAT('%', LOWER(#search#), '%') OR username LIKE CONCAT('%', LOWER(#search#), '%') 
                </isNotNull>
            </dynamic>
    </select>
    
    <select id="list" parameterClass="query" resultMap="userResult">
        SELECT
            idx, name, sid, username, role, createdate, updatedate
        FROM
            user
        WHERE
            status = 1
            <dynamic>
                <isNotNull prepend="AND" property="search">
                    name LIKE CONCAT('%', LOWER(#search#), '%') OR username LIKE CONCAT('%', LOWER(#search#), '%') 
                </isNotNull>
            </dynamic>
        ORDER BY idx DESC
    </select>

</sqlMap>